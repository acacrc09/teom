pipeline {
  environment {
        registry = "jhonjcastroh/teom-ez"
        registryCredential = 'dockerhub_id' 
        dockerImage = ''
        namespace = "test-dev"
    }
  agent {
    node {
      label 'docker-agent'
    }
  }
  stages {
    stage ('Checkout codigo fuente') {
      steps {
        checkout scm
      }
    }
    stage ('Instalar dependencias nexus') {
      steps {
        sh '''
          npm config set registry http://nexus-biq.apps.okd.soft1.xyz/repository/npm-ez
          npm install --verbose -d
        '''
      }
    }
    stage ('Pruebas unitarias') {
      steps {
        sh '''
          npm run unit
        '''
      }
    }
    stage ('Inspecci√≥n con Sonarqube: npm run sonar') {
      steps {
        sh '''
          npm run sonar
        '''
      }
    }
    stage ('Publicar en Nexus: npm publish') {
      steps {
        sh '''
          npm publish
        '''
      }
    }

    stage ('Desplegar') {
       steps {
         script {
           openshift.withCluster() {
             openshift.withProject('teom') {
               openshift.selector('bc', 'nodejs-teom-develop').startBuild('--from-dir=./', '--wait=true', '--follow', '--loglevel=8')
             }
           }
         }
       }
    }
    stage ('Build image'){
      agent {
        label 'docker-agent'
      }
      steps {
        script {
          dockerImage = docker.build registry + ":develop"
        }
      }
    }
    stage('Push image to repository'){
      agent {
        label 'docker-agent'
      }
      steps {
        script { 
          docker.withRegistry( 'https://registry.hub.docker.com', registryCredential ) { 
            dockerImage.push() 
          }
        }
      }
    }
    stage ('Deploy on Kubernetes') {
      steps {
        script {
          kubernetesDeploy(configs: "openshift/deployment.yml", kubeconfigId: "d9b27584-32a0-4b70-a303-7c7b440f5bdd")
        }
      }
    }
    stage ('Probar API con Newman: npm run newman') {
      steps {
        sh '''
          npm run newman
        '''
      }
    }
    stage ('Smoke Test JMeter: npm run performance') {
      steps {
        sh '''
        '''
      }
    }
    stage ('Probar WEB con Nightwatch') {
      steps {
        sh '''
          npm run unit
        '''
      }
    }
  }
}
